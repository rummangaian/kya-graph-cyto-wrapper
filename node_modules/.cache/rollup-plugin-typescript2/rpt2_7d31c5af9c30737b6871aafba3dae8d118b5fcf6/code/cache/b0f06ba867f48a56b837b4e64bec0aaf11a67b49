{"code":"// default layout options\nconst colaDefaultLayout = {\n    name: 'cola',\n    animate: true, // whether to show the layout as it's running\n    refresh: 1, // number of ticks per frame; higher is faster but more jerky\n    // maxSimulationTime: 4000, // max length in ms to run the layout\n    // ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n    // fit: true, // on every layout reposition of nodes, fit the viewport\n    // padding: 30, // padding around the simulation\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    // nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n    // // layout event callbacks\n    // ready: function () {}, // on layoutready\n    // stop: function () {}, // on layoutstop\n    // // positioning options\n    // randomize: false, // use random node positions at beginning of layout\n    avoidOverlap: true, // if true, prevents overlap of node bounding boxes\n    handleDisconnected: true, // if true, avoids disconnected components from overlapping\n    // convergenceThreshold: 0.01, // when the alpha value (system energy) falls below this value, the layout stops\n    // flow: undefined, // use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }\n    // alignment: undefined, // relative alignment constraints on nodes, e.g. {vertical: [[{node: node1, offset: 0}, {node: node2, offset: 5}]], horizontal: [[{node: node3}, {node: node4}], [{node: node5}, {node: node6}]]}\n    // gapInequalities: undefined, // list of inequality constraints for the gap between the nodes, e.g. [{\"axis\":\"y\", \"left\":node1, \"right\":node2, \"gap\":25}]\n    // centerGraph: true, // adjusts the node positions initially to center the graph (pass false if you want to start the layout from the current position)\n    // // different methods of specifying edge length\n    // // each can be a constant numerical value or a function like `function( edge ){ return 2; }`\n    edgeLength: 80, // sets edge length directly in simulation\n    // edgeSymDiffLength: undefined, // symmetric diff edge length in simulation\n    // edgeJaccardLength: undefined, // jaccard edge length in simulation\n    // // iterations of cola algorithm; uses default values on undefined\n    // unconstrIter: undefined, // unconstrained initial layout iterations\n    // userConstIter: undefined, // initial layout iterations with user-specified constraints\n    // allConstIter: undefined, // initial layout iterations with all constraints including non-overlap\n};\nexport default colaDefaultLayout;\n","references":[],"dts":{"name":"/home/mobius/Project/KYA-MVT-FOLDER/kya-instance-cytoscape-lib/node_modules/.cache/rollup-plugin-typescript2/placeholder/cytoscapeDataUtils/colaLayoutDefault.d.ts","writeByteOrderMark":false,"text":"declare const colaDefaultLayout: {\n    name: string;\n    animate: boolean;\n    refresh: number;\n    avoidOverlap: boolean;\n    handleDisconnected: boolean;\n    edgeLength: number;\n};\nexport default colaDefaultLayout;\n"}}
